# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: Cache@2
  inputs:
    key: 'poetry | "$(Agent.OS)" | "$(python.version)" | poetry.lock'
    path: /home/vsts/.cache/pypoetry/virtualenvs
    restoreKeys: |
      poetry | "$(Agent.OS)" | "$(python.version)"
  displayName: Cache pip packages

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: pip install poetry
  displayName: 'Install poetry'

- script: poetry install -E all
  displayName: 'Install dependencies'

- script: poetry run python src/amanda/tests/download_model.py
  displayName: 'Download models'

- script: poetry run make build_cc
  displayName: 'Build C++ code'

- script: poetry run pytest
  displayName: 'Run pytest'
