[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}

[tool.black]
line-length = 88
target-version = ["py36"]
exclude = "setup.py|.*_pb2.py"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
skip_glob="*_pb2.py"
known_first_party = "amanda"
default_section = "THIRDPARTY"
# sections = "FUTURE,STDLIB,FIRSTPARTY,THIRDPARTY,LOCALFOLDER"

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
omit = ["src/amanda/tests/*", "src/amanda/tools/*"]

[tool.poetry]
name = "amanda"
version = "0.1.0"
description = "graph instrumentation"

license = "Apache-2.0"

authors = [
    "uchuhimo <uchuhimo@outlook.com>"
]

readme = "README.md"

repository = "https://github.com/uchuhimo/amanda"
homepage = "https://github.com/uchuhimo/amanda"

keywords = []
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]

[tool.poetry.dependencies]
python = ">= 3.7, < 4"
more-itertools = "*"
click = "*"
typing-extensions = "*"
protobuf = "*"
"ruamel.yaml" = "*"
h5py = "*"
immutables = "*"
loguru = "*"
guppy3 = "*"

[tool.poetry.dev-dependencies]
pybind11 = "*"
mypy-protobuf = "*"
numpy = "*"
scipy = "*"
tensorflow-gpu = "1.15.5"
torch = "1.8.1"
torchvision = "0.9.1"
mmdnn = "*"
onnx = "*"
onnxruntime = "*"
pip = ">=19.3"
dephell = { version = "*", extras = [ "full" ], allow-prereleases = true }
fissix = "*"
bump2version="*"
wheel="*"
watchdog="*"
flake8 = "*"
black = { version = "*", allow-prereleases = true }
isort = { version = "*", extras = [ "pyproject" ] }
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-xdist = "*"
pytest-dependency = "*"
pytest-profiling = "*"
filelock = "*"
tox="*"
coverage= { version = "*", extras = [ "toml" ] }
Sphinx="*"
twine="*"
ipython = "*"
jsondiff = "*"
wget = "*"
fire = "*"
pympler = "*"
types-protobuf = "*"
types-six = "*"
types-filelock = "*"
types-setuptools = "*"
types-toml = "*"
torch-scatter = { url = "https://pytorch-geometric.com/whl/torch-1.8.0+cu102/torch_scatter-2.0.8-cp37-cp37m-linux_x86_64.whl" }
torch-sparse = { url = "https://pytorch-geometric.com/whl/torch-1.8.0+cu102/torch_sparse-0.6.11-cp37-cp37m-linux_x86_64.whl" }
torch-geometric = "*"

[tool.poetry.scripts]
amanda = "amanda.cli.main:cli"
amanda-download = "amanda.cli.download:cli"
amanda-run = "amanda.cli.run:cli"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
