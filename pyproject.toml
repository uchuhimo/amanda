[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}

[tool.black]
line-length = 88
target-version = ["py36"]
exclude = "setup.py"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
known_first_party = "amanda"
default_section = "THIRDPARTY"
not_skip = "__init__.py"
# sections = "FUTURE,STDLIB,FIRSTPARTY,THIRDPARTY,LOCALFOLDER"

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]
omit = ["src/amanda/tests/*", "src/amanda/tools/*"]

[tool.poetry]
name = "amanda"
version = "0.1.0"
description = "graph instrumentation"

license = "Apache-2.0"

authors = [
    "uchuhimo <uchuhimo@outlook.com>"
]

readme = "README.md"

repository = "https://github.com/uchuhimo/mmx"
homepage = "https://github.com/uchuhimo/mmx"

keywords = []
classifiers=[
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
]

[tool.poetry.dependencies]
python = ">= 3.6, < 4"
six = "*"
more-itertools = "*"
click = "*"
typing-extensions = "*"
protobuf = "*"
immutables = "*"
mmdnn = "*"
onnx = "*"
onnxruntime = "*"
dataclasses = { version = "*", python = "< 3.7" }
typing = { version = "*", python = "< 3.7" }
contextvars = { version = "*", python = "< 3.7" }
tensorflow = { version = "1.13.1", optional = true }
torch = { version = "1.3.1", optional = true }
torchvision = { version = "0.4.2", optional = true }
# TODO: wait for the next release of torchvision, see https://github.com/pytorch/vision/issues/1712#issuecomment-570286349
pillow = "< 7"

[tool.poetry.dev-dependencies]
pip = "*"
dephell = { version = "*", extras = [ "full" ], allow-prereleases = true }
fissix = { version = "*", allow-prereleases = true }
bump2version="*"
wheel="*"
watchdog="*"
flake8 = "*"
black = { version = "*", allow-prereleases = true }
isort = { version = "*", extras = [ "pyproject" ] }
mypy = "*"
pre-commit = "*"
pytest = "*"
pytest-xdist = "*"
filelock = "*"
tox="*"
coverage= { version = "*", extras = [ "toml" ] }
Sphinx="*"
twine="*"
ipython = "*"
jsondiff = "*"

[tool.poetry.extras]
tensorflow = ["tensorflow"]
pytorch = ["torch", "torchvision"]
all = ["tensorflow", "torch", "torchvision"]

[tool.poetry.scripts]
amanda = "amanda.cli:cli"
